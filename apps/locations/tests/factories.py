import random

from factory import Faker, LazyFunction, Sequence, SubFactory, django, post_generation
from localflavor.us.us_states import US_STATES

from locations.models import Location
from locations.models import TeamLocation
from teams.tests import TeamFactory


random.seed(None)


def generate_num(low, high, count):
    return ''.join([str(random.randint(low, high)) for _ in range(count)])


def generate_phone_number():
    left = generate_num(2, 9, 1) + generate_num(0, 9, 2)
    middle = generate_num(0, 9, 3)
    right = generate_num(0, 9, 4)
    return '({}) {}-{}'.format(left, middle, right)


class LocationFactory(django.DjangoModelFactory):
    name = Sequence(lambda x: 'Location {}'.format(x))
    # slug is autogenerated via overridden .clean() method on the model
    street = Faker('street_name')
    street_number = Faker('building_number')
    city = Faker('city')
    state = Faker('random_element', elements=[state[0] for state in US_STATES])
    zip_code = Faker('zipcode')
    phone_number = LazyFunction(generate_phone_number)
    website = Faker('url')

    class Meta:
        model = Location

    @post_generation
    def full_clean(self, obj, extracted, **kwargs):
        self.full_clean(exclude=['slug'])


class TeamLocationFactory(django.DjangoModelFactory):
    team = SubFactory(TeamFactory)
    location = SubFactory(LocationFactory)

    class Meta:
        model = TeamLocation
