from factory import Faker, Sequence, SubFactory, django, post_generation

from sports.models import Sport
from sports.models import SportRegistration
from users.tests import UserFactory


class SportFactory(django.DjangoModelFactory):
    name = Sequence(lambda x: 'sport {x}'.format(x=x))
    # slug is autogenerated via overridden .clean() method on the model
    description = Faker('text', max_nb_chars=32)

    @post_generation
    def full_clean(self, obj, extracted, **kwargs):
        self.full_clean(exclude=['slug'])

    class Meta:
        model = Sport
        django_get_or_create = ('name',)


class SportRegistrationFactory(django.DjangoModelFactory):
    user = SubFactory(UserFactory)
    sport = SubFactory(SportFactory)
    role = Faker('random_element', elements=[role[0] for role in SportRegistration.ROLE_CHOICES])
    is_complete = True

    class Meta:
        model = SportRegistration
