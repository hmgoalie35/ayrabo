- name: Add nginx ppa
  apt_repository:
    repo: ppa:nginx/stable
    state: present
    update_cache: yes

- name: Install nginx
  apt:
    name: nginx
    state: present

- name: Remove default enabled site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- include: ../../../utils/reload_nginx_conf.yml

# TODO use gunicorn from symlinked current directory, instead of global one.
# Need to see if switching the binary on the fly will even work.
- name: Install gunicorn globally
  pip:
    name: gunicorn
    state: present

- name: Copy global nginx config
  template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/nginx.conf"

- include: ../../../utils/reload_nginx_conf.yml

- name: Create server config {{ ansible_default_ipv4.address }}
  template:
    src: "server_boilerplate.j2"
    dest: "/etc/nginx/sites-available/{{ ansible_default_ipv4.address }}"

- name: Enable server config for {{ ansible_default_ipv4.address }}
  file:
    src: "/etc/nginx/sites-available/{{ ansible_default_ipv4.address }}"
    dest: "/etc/nginx/sites-enabled/{{ ansible_default_ipv4.address }}"
    state: link

- include: ../../../utils/reload_nginx_conf.yml

# Supervisor for nginx, gunicorn.


# Clone project, install npm, node

#apt_repository: curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -


# This should be done after code is checked out.
#- name: Copy over env vars
#  template:
#    src: .env.example.j2
#    dest: ../../../../../.env
