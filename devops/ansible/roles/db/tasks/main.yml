- import_role:
    name: postgres

- name: Install postgres server
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - postgresql-9.6
    - libpq-dev

- name: Install psycopg2 for ansible
  pip:
    name: psycopg2
    state: present

- name: Remove default postgres timezone setting
  lineinfile:
    path: "/etc/postgresql/9.6/main/postgresql.conf"
    regexp: "^timezone = 'localtime'$"
    state: absent

- name: Configure timezone for postgres
  lineinfile:
    path: "/etc/postgresql/9.6/main/postgresql.conf"
    insertafter: EOF
    line: "timezone = 'UTC'"
    state: present

- name: Configure listen addresses for postgres
  lineinfile:
    path: "/etc/postgresql/9.6/main/postgresql.conf"
    insertafter: EOF
    # TODO Update this:
    # If webserver & dbserver are on the same machine, we could even fallback to unix sockets (which by default are listened on. Need to allow that in pg_hba).
    # Otherwise we need to add the ipv4 & ipv6 (if exists) addresses of the dbserver here. Probably don't want to use *, 0.0.0.0, ::.
    # Info https://www.postgresql.org/docs/9.6/static/runtime-config-connection.html.

    # listen_addresses specifies the ip address(es) the server should listen for connections.
    # * means listen on every available ip interface, 0.0.0.0 and :: allow listening on all ipv4/ipv6 addresses respectively.
    # pg_hba.conf deals with allowing/denying the connections.

    line: "listen_addresses = '0.0.0.0, ::'"
    state: present

# https://www.postgresql.org/docs/current/static/auth-pg-hba-conf.html
- name: Allow {{ db_user }} to connect to postgres
  lineinfile:
    path: "/etc/postgresql/9.6/main/pg_hba.conf"
    insertafter: EOF
    line: "host  {{ db_name }}  {{ db_user }} {{ item }}  md5"
    state: present
    # TODO Update this:
    # If webserver & dbserver are on the same machine, we could even fallback to unix sockets here.
    # Otherwise we need to add the ipv4 & ipv6 (if exists) addresses of the dbserver here.
    # We will probably need to do this for multiple users at some point.
    # Also might be good to reject all other connections.
  with_items:
    - "0.0.0.0/0"
    - "::0/0"

- name: Restart postgres
  service:
    name: postgresql
    state: restarted

- name: Create {{ db_user }} user
  become_user: postgres
  postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    encrypted: yes
    state: present

- name: Create {{ db_name }} database
  become_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    encoding: "{{ db_encoding }}"
    owner: "{{ db_user }}"
    state: present

- name: Configure role attributes for {{ db_user }}
  become_user: postgres
  postgresql_user:
    name: "{{ db_user }}"
    db: "{{ db_name }}"
    role_attr_flags: CREATEDB
    state: present

# TODO Add supervisor, was having trouble with upstart/systemv/systemd and supervisor. Add postgres binaries to PATH.
# Maybe remove postgresql from upstart, have supervisor run:
# /usr/lib/postgresql/9.6/bin/postgres -D /var/lib/postgresql/9.6/main -c config_file=/etc/postgresql/9.6/main/postgresql.conf
# or use pg_ctl in the dir /usr/lib/postgresql/9.6/bin.
# See https://www.postgresql.org/docs/9.6/static/reference-client.html and https://www.postgresql.org/docs/current/static/reference-server.html
